(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@ngrx/data/src/entity-services/entity-collection-service-elements-factory.ngsummary", ["require", "exports", "@ngrx/data/src/entity-services/entity-collection-service-elements-factory", "@ngrx/data/src/dispatchers/entity-dispatcher-factory", "@ngrx/data/src/entity-metadata/entity-definition.service", "@ngrx/data/src/selectors/entity-selectors", "@ngrx/data/src/selectors/entity-selectors$"], factory);
    }
})(function (require, exports) {
    "use strict";
    /**
     * @fileoverview This file was generated by the Angular template compiler. Do not edit.
     *
     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
     * tslint:disable
     */ 
    Object.defineProperty(exports, "__esModule", { value: true });
    const i0 = require("@ngrx/data/src/entity-services/entity-collection-service-elements-factory");
    const i1 = require("@ngrx/data/src/dispatchers/entity-dispatcher-factory");
    const i2 = require("@ngrx/data/src/entity-metadata/entity-definition.service");
    const i3 = require("@ngrx/data/src/selectors/entity-selectors");
    const i4 = require("@ngrx/data/src/selectors/entity-selectors$");
    function EntityCollectionServiceElementsFactoryNgSummary() { return [{ summaryKind: 3, type: { reference: i0.EntityCollectionServiceElementsFactory, diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.EntityDispatcherFactory } } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i2.EntityDefinitionService } } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.EntitySelectorsFactory } } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i4.EntitySelectors$Factory } } }], lifecycleHooks: [] } }]; }
    exports.EntityCollectionServiceElementsFactoryNgSummary = EntityCollectionServiceElementsFactoryNgSummary;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LWNvbGxlY3Rpb24tc2VydmljZS1lbGVtZW50cy1mYWN0b3J5Lm5nc3VtbWFyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvZGF0YS9zcmMvZW50aXR5LXNlcnZpY2VzL2VudGl0eS1jb2xsZWN0aW9uLXNlcnZpY2UtZWxlbWVudHMtZmFjdG9yeS5uZ3N1bW1hcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGkwIGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaTAuQ29tcG9uZW50RmFjdG9yeTtcbiJdfQ==