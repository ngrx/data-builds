{"version":3,"file":"interfaces.js","sourceRoot":"ng://@ngrx/data/","sources":["src/dataservices/interfaces.ts"],"names":[],"mappings":";;;;;;;;;;AAIA,iDASC;;;IARC,2CAAsB;;;;;IACtB,kEAA8B;;;;;IAC9B,iEAAyD;;;;IACzD,+DAA0B;;;;;IAC1B,kEAAgC;;;;;IAChC,2EAA4D;;;;;IAC5D,qEAAyC;;;;;IACzC,qEAAiC;;;;;AAKnC,iCAKC;;;IAJC,6BAAoB;;IACpB,0BAAY;;IACZ,2BAAW;;IACX,8BAAc;;;;;;;;AAQhB,iCAEC","sourcesContent":["import { Observable } from 'rxjs';\nimport { Update } from '@ngrx/entity';\n\n/** A service that performs REST-like HTTP data operations for an entity collection */\nexport interface EntityCollectionDataService<T> {\n  readonly name: string;\n  add(entity: T): Observable<T>;\n  delete(id: number | string): Observable<number | string>;\n  getAll(): Observable<T[]>;\n  getById(id: any): Observable<T>;\n  getWithQuery(params: QueryParams | string): Observable<T[]>;\n  update(update: Update<T>): Observable<T>;\n  upsert(entity: T): Observable<T>;\n}\n\nexport type HttpMethods = 'DELETE' | 'GET' | 'POST' | 'PUT';\n\nexport interface RequestData {\n  method: HttpMethods;\n  url: string;\n  data?: any;\n  options?: any;\n}\n\n/**\n * A key/value map of parameters to be turned into an HTTP query string\n * Same as HttpClient's HttpParamsOptions which is NOT exported at package level\n * https://github.com/angular/angular/issues/22013\n */\nexport interface QueryParams {\n  [name: string]: string | string[];\n}\n"]}