// AOT v5 bug:
// NO BARRELS or else `ng build --aot` of any app using ngrx-data produces strange errors
// actions
export * from './actions/entity-action-factory';
export * from './actions/entity-action-guard';
export * from './actions/entity-action-operators';
export * from './actions/entity-cache-action';
export * from './actions/entity-cache-change-set';
export * from './actions/entity-op';
export * from './actions/merge-strategy';
// dataservices
export * from './dataservices/data-service-error';
export * from './dataservices/default-data-service-config';
export * from './dataservices/default-data.service';
export * from './dataservices/entity-cache-data.service';
export * from './dataservices/entity-data.service';
export * from './dataservices/http-url-generator';
export * from './dataservices/persistence-result-handler.service';
// dispatchers
export * from './dispatchers/entity-cache-dispatcher';
export * from './dispatchers/entity-dispatcher-base';
export * from './dispatchers/entity-dispatcher-default-options';
export * from './dispatchers/entity-dispatcher-factory';
export * from './dispatchers/entity-dispatcher';
// effects
export * from './effects/entity-cache-effects';
export * from './effects/entity-effects';
// entity-metadata
export * from './entity-metadata/entity-definition.service';
export * from './entity-metadata/entity-definition';
export * from './entity-metadata/entity-filters';
export * from './entity-metadata/entity-metadata';
// entity-services
export * from './entity-services/entity-collection-service-base';
export * from './entity-services/entity-collection-service-elements-factory';
export * from './entity-services/entity-collection-service-factory';
export * from './entity-services/entity-services-base';
export * from './entity-services/entity-services-elements';
export * from './entity-services/entity-services';
// reducers
export * from './reducers/constants';
export * from './reducers/entity-cache-reducer';
export * from './reducers/entity-change-tracker-base';
export * from './reducers/entity-collection-creator';
export * from './reducers/entity-collection-reducer-methods';
export * from './reducers/entity-collection-reducer-registry';
export * from './reducers/entity-collection-reducer';
export * from './reducers/entity-collection';
// selectors
export * from './selectors/entity-cache-selector';
export * from './selectors/entity-selectors';
export * from './selectors/entity-selectors$';
// Utils
export * from './utils/correlation-id-generator';
export * from './utils/default-logger';
export * from './utils/default-pluralizer';
export * from './utils/guid-fns';
export * from './utils/interfaces';
export * from './utils/utilities';
// NgrxDataModule
export { NgrxDataModule } from './ngrx-data.module';
export { NgrxDataModuleWithoutEffects, } from './ngrx-data-without-effects.module';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2RhdGEvc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWM7QUFDZCx5RkFBeUY7QUFDekYsVUFBVTtBQUNWLGNBQWMsaUNBQWlDLENBQUM7QUFDaEQsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLG1DQUFtQyxDQUFDO0FBRWxELGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLHFCQUFxQixDQUFDO0FBQ3BDLGNBQWMsMEJBQTBCLENBQUM7QUFHekMsZUFBZTtBQUNmLGNBQWMsbUNBQW1DLENBQUM7QUFDbEQsY0FBYyw0Q0FBNEMsQ0FBQztBQUMzRCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELGNBQWMsMENBQTBDLENBQUM7QUFDekQsY0FBYyxvQ0FBb0MsQ0FBQztBQUNuRCxjQUFjLG1DQUFtQyxDQUFDO0FBRWxELGNBQWMsbURBQW1ELENBQUM7QUFFbEUsY0FBYztBQUNkLGNBQWMsdUNBQXVDLENBQUM7QUFFdEQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLGlEQUFpRCxDQUFDO0FBQ2hFLGNBQWMseUNBQXlDLENBQUM7QUFDeEQsY0FBYyxpQ0FBaUMsQ0FBQztBQUVoRCxVQUFVO0FBQ1YsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDBCQUEwQixDQUFDO0FBRXpDLGtCQUFrQjtBQUNsQixjQUFjLDZDQUE2QyxDQUFDO0FBQzVELGNBQWMscUNBQXFDLENBQUM7QUFDcEQsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLG1DQUFtQyxDQUFDO0FBRWxELGtCQUFrQjtBQUNsQixjQUFjLGtEQUFrRCxDQUFDO0FBQ2pFLGNBQWMsOERBQThELENBQUM7QUFDN0UsY0FBYyxxREFBcUQsQ0FBQztBQUVwRSxjQUFjLHdDQUF3QyxDQUFDO0FBQ3ZELGNBQWMsNENBQTRDLENBQUM7QUFDM0QsY0FBYyxtQ0FBbUMsQ0FBQztBQUVsRCxXQUFXO0FBQ1gsY0FBYyxzQkFBc0IsQ0FBQztBQUNyQyxjQUFjLGlDQUFpQyxDQUFDO0FBRWhELGNBQWMsdUNBQXVDLENBQUM7QUFFdEQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLDhDQUE4QyxDQUFDO0FBQzdELGNBQWMsK0NBQStDLENBQUM7QUFDOUQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLDhCQUE4QixDQUFDO0FBRTdDLFlBQVk7QUFDWixjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsOEJBQThCLENBQUM7QUFDN0MsY0FBYywrQkFBK0IsQ0FBQztBQUU5QyxRQUFRO0FBQ1IsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLG9CQUFvQixDQUFDO0FBQ25DLGNBQWMsbUJBQW1CLENBQUM7QUFFbEMsaUJBQWlCO0FBQ2pCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQ0wsNEJBQTRCLEdBRTdCLE1BQU0sb0NBQW9DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBT1QgdjUgYnVnOlxuLy8gTk8gQkFSUkVMUyBvciBlbHNlIGBuZyBidWlsZCAtLWFvdGAgb2YgYW55IGFwcCB1c2luZyBuZ3J4LWRhdGEgcHJvZHVjZXMgc3RyYW5nZSBlcnJvcnNcbi8vIGFjdGlvbnNcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9lbnRpdHktYWN0aW9uLWZhY3RvcnknO1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL2VudGl0eS1hY3Rpb24tZ3VhcmQnO1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL2VudGl0eS1hY3Rpb24tb3BlcmF0b3JzJztcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9lbnRpdHktYWN0aW9uJztcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9lbnRpdHktY2FjaGUtYWN0aW9uJztcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9lbnRpdHktY2FjaGUtY2hhbmdlLXNldCc7XG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvZW50aXR5LW9wJztcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9tZXJnZS1zdHJhdGVneSc7XG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvdXBkYXRlLXJlc3BvbnNlLWRhdGEnO1xuXG4vLyBkYXRhc2VydmljZXNcbmV4cG9ydCAqIGZyb20gJy4vZGF0YXNlcnZpY2VzL2RhdGEtc2VydmljZS1lcnJvcic7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFzZXJ2aWNlcy9kZWZhdWx0LWRhdGEtc2VydmljZS1jb25maWcnO1xuZXhwb3J0ICogZnJvbSAnLi9kYXRhc2VydmljZXMvZGVmYXVsdC1kYXRhLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9kYXRhc2VydmljZXMvZW50aXR5LWNhY2hlLWRhdGEuc2VydmljZSc7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFzZXJ2aWNlcy9lbnRpdHktZGF0YS5zZXJ2aWNlJztcbmV4cG9ydCAqIGZyb20gJy4vZGF0YXNlcnZpY2VzL2h0dHAtdXJsLWdlbmVyYXRvcic7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFzZXJ2aWNlcy9pbnRlcmZhY2VzJztcbmV4cG9ydCAqIGZyb20gJy4vZGF0YXNlcnZpY2VzL3BlcnNpc3RlbmNlLXJlc3VsdC1oYW5kbGVyLnNlcnZpY2UnO1xuXG4vLyBkaXNwYXRjaGVyc1xuZXhwb3J0ICogZnJvbSAnLi9kaXNwYXRjaGVycy9lbnRpdHktY2FjaGUtZGlzcGF0Y2hlcic7XG5leHBvcnQgKiBmcm9tICcuL2Rpc3BhdGNoZXJzL2VudGl0eS1jb21tYW5kcyc7XG5leHBvcnQgKiBmcm9tICcuL2Rpc3BhdGNoZXJzL2VudGl0eS1kaXNwYXRjaGVyLWJhc2UnO1xuZXhwb3J0ICogZnJvbSAnLi9kaXNwYXRjaGVycy9lbnRpdHktZGlzcGF0Y2hlci1kZWZhdWx0LW9wdGlvbnMnO1xuZXhwb3J0ICogZnJvbSAnLi9kaXNwYXRjaGVycy9lbnRpdHktZGlzcGF0Y2hlci1mYWN0b3J5JztcbmV4cG9ydCAqIGZyb20gJy4vZGlzcGF0Y2hlcnMvZW50aXR5LWRpc3BhdGNoZXInO1xuXG4vLyBlZmZlY3RzXG5leHBvcnQgKiBmcm9tICcuL2VmZmVjdHMvZW50aXR5LWNhY2hlLWVmZmVjdHMnO1xuZXhwb3J0ICogZnJvbSAnLi9lZmZlY3RzL2VudGl0eS1lZmZlY3RzJztcblxuLy8gZW50aXR5LW1ldGFkYXRhXG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1tZXRhZGF0YS9lbnRpdHktZGVmaW5pdGlvbi5zZXJ2aWNlJztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LW1ldGFkYXRhL2VudGl0eS1kZWZpbml0aW9uJztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LW1ldGFkYXRhL2VudGl0eS1maWx0ZXJzJztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LW1ldGFkYXRhL2VudGl0eS1tZXRhZGF0YSc7XG5cbi8vIGVudGl0eS1zZXJ2aWNlc1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktc2VydmljZXMvZW50aXR5LWNvbGxlY3Rpb24tc2VydmljZS1iYXNlJztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LXNlcnZpY2VzL2VudGl0eS1jb2xsZWN0aW9uLXNlcnZpY2UtZWxlbWVudHMtZmFjdG9yeSc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1zZXJ2aWNlcy9lbnRpdHktY29sbGVjdGlvbi1zZXJ2aWNlLWZhY3RvcnknO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktc2VydmljZXMvZW50aXR5LWNvbGxlY3Rpb24tc2VydmljZSc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1zZXJ2aWNlcy9lbnRpdHktc2VydmljZXMtYmFzZSc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1zZXJ2aWNlcy9lbnRpdHktc2VydmljZXMtZWxlbWVudHMnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktc2VydmljZXMvZW50aXR5LXNlcnZpY2VzJztcblxuLy8gcmVkdWNlcnNcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvY29uc3RhbnRzJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNhY2hlLXJlZHVjZXInO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY2FjaGUnO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY2hhbmdlLXRyYWNrZXItYmFzZSc7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jaGFuZ2UtdHJhY2tlcic7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jb2xsZWN0aW9uLWNyZWF0b3InO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY29sbGVjdGlvbi1yZWR1Y2VyLW1ldGhvZHMnO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY29sbGVjdGlvbi1yZWR1Y2VyLXJlZ2lzdHJ5JztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNvbGxlY3Rpb24tcmVkdWNlcic7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jb2xsZWN0aW9uJztcblxuLy8gc2VsZWN0b3JzXG5leHBvcnQgKiBmcm9tICcuL3NlbGVjdG9ycy9lbnRpdHktY2FjaGUtc2VsZWN0b3InO1xuZXhwb3J0ICogZnJvbSAnLi9zZWxlY3RvcnMvZW50aXR5LXNlbGVjdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL3NlbGVjdG9ycy9lbnRpdHktc2VsZWN0b3JzJCc7XG5cbi8vIFV0aWxzXG5leHBvcnQgKiBmcm9tICcuL3V0aWxzL2NvcnJlbGF0aW9uLWlkLWdlbmVyYXRvcic7XG5leHBvcnQgKiBmcm9tICcuL3V0aWxzL2RlZmF1bHQtbG9nZ2VyJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvZGVmYXVsdC1wbHVyYWxpemVyJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvZ3VpZC1mbnMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy9pbnRlcmZhY2VzJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvdXRpbGl0aWVzJztcblxuLy8gTmdyeERhdGFNb2R1bGVcbmV4cG9ydCB7IE5ncnhEYXRhTW9kdWxlIH0gZnJvbSAnLi9uZ3J4LWRhdGEubW9kdWxlJztcbmV4cG9ydCB7XG4gIE5ncnhEYXRhTW9kdWxlV2l0aG91dEVmZmVjdHMsXG4gIE5ncnhEYXRhTW9kdWxlQ29uZmlnLFxufSBmcm9tICcuL25ncngtZGF0YS13aXRob3V0LWVmZmVjdHMubW9kdWxlJztcbiJdfQ==