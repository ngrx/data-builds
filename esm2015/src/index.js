/**
 * @fileoverview added by tsickle
 * Generated from: modules/data/src/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// AOT v5 bug:
// NO BARRELS or else `ng build --aot` of any app using @ngrx/data produces strange errors
// actions
export { EntityActionFactory } from './actions/entity-action-factory';
export { EntityActionGuard } from './actions/entity-action-guard';
export { ofEntityOp, ofEntityType } from './actions/entity-action-operators';
export {} from './actions/entity-action';
export { ChangeSetOperation, EntityCacheAction, ClearCollections, LoadCollections, MergeQuerySet, SetEntityCache, SaveEntities, SaveEntitiesCancel, SaveEntitiesCanceled, SaveEntitiesError, SaveEntitiesSuccess } from './actions/entity-cache-action';
export { excludeEmptyChangeSetItems, ChangeSetItemFactory, changeSetItemFactory } from './actions/entity-cache-change-set';
export { makeErrorOp, makeSuccessOp, EntityOp, OP_SUCCESS, OP_ERROR } from './actions/entity-op';
export { MergeStrategy } from './actions/merge-strategy';
export {} from './actions/update-response-data';
// dataservices
export { DataServiceError } from './dataservices/data-service-error';
export { DefaultDataServiceConfig } from './dataservices/default-data-service-config';
export { DefaultDataService, DefaultDataServiceFactory } from './dataservices/default-data.service';
export { EntityCacheDataService } from './dataservices/entity-cache-data.service';
export { EntityDataService } from './dataservices/entity-data.service';
export { normalizeRoot, EntityHttpResourceUrls, HttpUrlGenerator, DefaultHttpUrlGenerator } from './dataservices/http-url-generator';
export {} from './dataservices/interfaces';
export { PersistenceResultHandler, DefaultPersistenceResultHandler } from './dataservices/persistence-result-handler.service';
// dispatchers
export { EntityCacheDispatcher } from './dispatchers/entity-cache-dispatcher';
export {} from './dispatchers/entity-commands';
export { EntityDispatcherBase } from './dispatchers/entity-dispatcher-base';
export { EntityDispatcherDefaultOptions } from './dispatchers/entity-dispatcher-default-options';
export { EntityDispatcherFactory } from './dispatchers/entity-dispatcher-factory';
export { PersistanceCanceled } from './dispatchers/entity-dispatcher';
// effects
export { EntityCacheEffects } from './effects/entity-cache-effects';
export { persistOps, EntityEffects } from './effects/entity-effects';
// entity-metadata
export { EntityDefinitionService } from './entity-metadata/entity-definition.service';
export { createEntityDefinition } from './entity-metadata/entity-definition';
export { PropsFilterFnFactory } from './entity-metadata/entity-filters';
export { ENTITY_METADATA_TOKEN } from './entity-metadata/entity-metadata';
// entity-services
export { EntityCollectionServiceBase } from './entity-services/entity-collection-service-base';
export { EntityCollectionServiceElementsFactory } from './entity-services/entity-collection-service-elements-factory';
export { EntityCollectionServiceFactory } from './entity-services/entity-collection-service-factory';
export {} from './entity-services/entity-collection-service';
export { EntityServicesBase } from './entity-services/entity-services-base';
export { EntityServicesElements } from './entity-services/entity-services-elements';
export { EntityServices } from './entity-services/entity-services';
// reducers
export { ENTITY_CACHE_NAME, ENTITY_CACHE_NAME_TOKEN, ENTITY_CACHE_META_REDUCERS, ENTITY_COLLECTION_META_REDUCERS, INITIAL_ENTITY_CACHE_STATE } from './reducers/constants';
export { EntityCacheReducerFactory } from './reducers/entity-cache-reducer';
export {} from './reducers/entity-cache';
export { EntityChangeTrackerBase } from './reducers/entity-change-tracker-base';
export {} from './reducers/entity-change-tracker';
export { createEmptyEntityCollection, EntityCollectionCreator } from './reducers/entity-collection-creator';
export { EntityCollectionReducerMethods, EntityCollectionReducerMethodsFactory } from './reducers/entity-collection-reducer-methods';
export { EntityCollectionReducerRegistry } from './reducers/entity-collection-reducer-registry';
export { EntityCollectionReducerFactory } from './reducers/entity-collection-reducer';
export { ChangeType } from './reducers/entity-collection';
// selectors
export { createEntityCacheSelector, ENTITY_CACHE_SELECTOR_TOKEN, entityCacheSelectorProvider } from './selectors/entity-cache-selector';
export { EntitySelectorsFactory } from './selectors/entity-selectors';
export { EntitySelectors$Factory } from './selectors/entity-selectors$';
// Utils
export { CorrelationIdGenerator } from './utils/correlation-id-generator';
export { DefaultLogger } from './utils/default-logger';
export { DefaultPluralizer } from './utils/default-pluralizer';
export { getUuid, getGuid, getGuidComb, guidComparer } from './utils/guid-fns';
export { Logger, PLURAL_NAMES_TOKEN, Pluralizer } from './utils/interfaces';
export { defaultSelectId, flattenArgs, toUpdateFactory } from './utils/utilities';
// EntityDataModule
export { EntityDataModule } from './entity-data.module';
export { EntityDataModuleWithoutEffects, } from './entity-data-without-effects.module';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL2RhdGEvc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBR0Esb0NBQWMsaUNBQWlDLENBQUM7QUFDaEQsa0NBQWMsK0JBQStCLENBQUM7QUFDOUMseUNBQWMsbUNBQW1DLENBQUM7QUFDbEQsZUFBYyx5QkFBeUIsQ0FBQztBQUN4Qyx3TkFBYywrQkFBK0IsQ0FBQztBQUM5Qyx1RkFBYyxtQ0FBbUMsQ0FBQztBQUNsRCwyRUFBYyxxQkFBcUIsQ0FBQztBQUNwQyw4QkFBYywwQkFBMEIsQ0FBQztBQUN6QyxlQUFjLGdDQUFnQyxDQUFDOztBQUcvQyxpQ0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCx5Q0FBYyw0Q0FBNEMsQ0FBQztBQUMzRCw4REFBYyxxQ0FBcUMsQ0FBQztBQUNwRCx1Q0FBYywwQ0FBMEMsQ0FBQztBQUN6RCxrQ0FBYyxvQ0FBb0MsQ0FBQztBQUNuRCxpR0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxlQUFjLDJCQUEyQixDQUFDO0FBQzFDLDBFQUFjLG1EQUFtRCxDQUFDOztBQUdsRSxzQ0FBYyx1Q0FBdUMsQ0FBQztBQUN0RCxlQUFjLCtCQUErQixDQUFDO0FBQzlDLHFDQUFjLHNDQUFzQyxDQUFDO0FBQ3JELCtDQUFjLGlEQUFpRCxDQUFDO0FBQ2hFLHdDQUFjLHlDQUF5QyxDQUFDO0FBQ3hELG9DQUFjLGlDQUFpQyxDQUFDOztBQUdoRCxtQ0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQywwQ0FBYywwQkFBMEIsQ0FBQzs7QUFHekMsd0NBQWMsNkNBQTZDLENBQUM7QUFDNUQsdUNBQWMscUNBQXFDLENBQUM7QUFDcEQscUNBQWMsa0NBQWtDLENBQUM7QUFDakQsc0NBQWMsbUNBQW1DLENBQUM7O0FBR2xELDRDQUFjLGtEQUFrRCxDQUFDO0FBQ2pFLHVEQUFjLDhEQUE4RCxDQUFDO0FBQzdFLCtDQUFjLHFEQUFxRCxDQUFDO0FBQ3BFLGVBQWMsNkNBQTZDLENBQUM7QUFDNUQsbUNBQWMsd0NBQXdDLENBQUM7QUFDdkQsdUNBQWMsNENBQTRDLENBQUM7QUFDM0QsK0JBQWMsbUNBQW1DLENBQUM7O0FBR2xELG9KQUFjLHNCQUFzQixDQUFDO0FBQ3JDLDBDQUFjLGlDQUFpQyxDQUFDO0FBQ2hELGVBQWMseUJBQXlCLENBQUM7QUFDeEMsd0NBQWMsdUNBQXVDLENBQUM7QUFDdEQsZUFBYyxrQ0FBa0MsQ0FBQztBQUNqRCxxRUFBYyxzQ0FBc0MsQ0FBQztBQUNyRCxzRkFBYyw4Q0FBOEMsQ0FBQztBQUM3RCxnREFBYywrQ0FBK0MsQ0FBQztBQUM5RCwrQ0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCwyQkFBYyw4QkFBOEIsQ0FBQzs7QUFHN0Msb0dBQWMsbUNBQW1DLENBQUM7QUFDbEQsdUNBQWMsOEJBQThCLENBQUM7QUFDN0Msd0NBQWMsK0JBQStCLENBQUM7O0FBRzlDLHVDQUFjLGtDQUFrQyxDQUFDO0FBQ2pELDhCQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGtDQUFjLDRCQUE0QixDQUFDO0FBQzNDLDREQUFjLGtCQUFrQixDQUFDO0FBQ2pDLHVEQUFjLG9CQUFvQixDQUFDO0FBQ25DLDhEQUFjLG1CQUFtQixDQUFDOztBQUdsQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQ0wsOEJBQThCLEdBRS9CLE1BQU0sc0NBQXNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBT1QgdjUgYnVnOlxuLy8gTk8gQkFSUkVMUyBvciBlbHNlIGBuZyBidWlsZCAtLWFvdGAgb2YgYW55IGFwcCB1c2luZyBAbmdyeC9kYXRhIHByb2R1Y2VzIHN0cmFuZ2UgZXJyb3JzXG4vLyBhY3Rpb25zXG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvZW50aXR5LWFjdGlvbi1mYWN0b3J5JztcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9lbnRpdHktYWN0aW9uLWd1YXJkJztcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucy9lbnRpdHktYWN0aW9uLW9wZXJhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvZW50aXR5LWFjdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvZW50aXR5LWNhY2hlLWFjdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvZW50aXR5LWNhY2hlLWNoYW5nZS1zZXQnO1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL2VudGl0eS1vcCc7XG5leHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvbWVyZ2Utc3RyYXRlZ3knO1xuZXhwb3J0ICogZnJvbSAnLi9hY3Rpb25zL3VwZGF0ZS1yZXNwb25zZS1kYXRhJztcblxuLy8gZGF0YXNlcnZpY2VzXG5leHBvcnQgKiBmcm9tICcuL2RhdGFzZXJ2aWNlcy9kYXRhLXNlcnZpY2UtZXJyb3InO1xuZXhwb3J0ICogZnJvbSAnLi9kYXRhc2VydmljZXMvZGVmYXVsdC1kYXRhLXNlcnZpY2UtY29uZmlnJztcbmV4cG9ydCAqIGZyb20gJy4vZGF0YXNlcnZpY2VzL2RlZmF1bHQtZGF0YS5zZXJ2aWNlJztcbmV4cG9ydCAqIGZyb20gJy4vZGF0YXNlcnZpY2VzL2VudGl0eS1jYWNoZS1kYXRhLnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9kYXRhc2VydmljZXMvZW50aXR5LWRhdGEuc2VydmljZSc7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFzZXJ2aWNlcy9odHRwLXVybC1nZW5lcmF0b3InO1xuZXhwb3J0ICogZnJvbSAnLi9kYXRhc2VydmljZXMvaW50ZXJmYWNlcyc7XG5leHBvcnQgKiBmcm9tICcuL2RhdGFzZXJ2aWNlcy9wZXJzaXN0ZW5jZS1yZXN1bHQtaGFuZGxlci5zZXJ2aWNlJztcblxuLy8gZGlzcGF0Y2hlcnNcbmV4cG9ydCAqIGZyb20gJy4vZGlzcGF0Y2hlcnMvZW50aXR5LWNhY2hlLWRpc3BhdGNoZXInO1xuZXhwb3J0ICogZnJvbSAnLi9kaXNwYXRjaGVycy9lbnRpdHktY29tbWFuZHMnO1xuZXhwb3J0ICogZnJvbSAnLi9kaXNwYXRjaGVycy9lbnRpdHktZGlzcGF0Y2hlci1iYXNlJztcbmV4cG9ydCAqIGZyb20gJy4vZGlzcGF0Y2hlcnMvZW50aXR5LWRpc3BhdGNoZXItZGVmYXVsdC1vcHRpb25zJztcbmV4cG9ydCAqIGZyb20gJy4vZGlzcGF0Y2hlcnMvZW50aXR5LWRpc3BhdGNoZXItZmFjdG9yeSc7XG5leHBvcnQgKiBmcm9tICcuL2Rpc3BhdGNoZXJzL2VudGl0eS1kaXNwYXRjaGVyJztcblxuLy8gZWZmZWN0c1xuZXhwb3J0ICogZnJvbSAnLi9lZmZlY3RzL2VudGl0eS1jYWNoZS1lZmZlY3RzJztcbmV4cG9ydCAqIGZyb20gJy4vZWZmZWN0cy9lbnRpdHktZWZmZWN0cyc7XG5cbi8vIGVudGl0eS1tZXRhZGF0YVxuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktbWV0YWRhdGEvZW50aXR5LWRlZmluaXRpb24uc2VydmljZSc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1tZXRhZGF0YS9lbnRpdHktZGVmaW5pdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1tZXRhZGF0YS9lbnRpdHktZmlsdGVycyc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1tZXRhZGF0YS9lbnRpdHktbWV0YWRhdGEnO1xuXG4vLyBlbnRpdHktc2VydmljZXNcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LXNlcnZpY2VzL2VudGl0eS1jb2xsZWN0aW9uLXNlcnZpY2UtYmFzZSc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1zZXJ2aWNlcy9lbnRpdHktY29sbGVjdGlvbi1zZXJ2aWNlLWVsZW1lbnRzLWZhY3RvcnknO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktc2VydmljZXMvZW50aXR5LWNvbGxlY3Rpb24tc2VydmljZS1mYWN0b3J5JztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LXNlcnZpY2VzL2VudGl0eS1jb2xsZWN0aW9uLXNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktc2VydmljZXMvZW50aXR5LXNlcnZpY2VzLWJhc2UnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHktc2VydmljZXMvZW50aXR5LXNlcnZpY2VzLWVsZW1lbnRzJztcbmV4cG9ydCAqIGZyb20gJy4vZW50aXR5LXNlcnZpY2VzL2VudGl0eS1zZXJ2aWNlcyc7XG5cbi8vIHJlZHVjZXJzXG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2NvbnN0YW50cyc7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jYWNoZS1yZWR1Y2VyJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNhY2hlJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNoYW5nZS10cmFja2VyLWJhc2UnO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY2hhbmdlLXRyYWNrZXInO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY29sbGVjdGlvbi1jcmVhdG9yJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNvbGxlY3Rpb24tcmVkdWNlci1tZXRob2RzJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlcnMvZW50aXR5LWNvbGxlY3Rpb24tcmVkdWNlci1yZWdpc3RyeSc7XG5leHBvcnQgKiBmcm9tICcuL3JlZHVjZXJzL2VudGl0eS1jb2xsZWN0aW9uLXJlZHVjZXInO1xuZXhwb3J0ICogZnJvbSAnLi9yZWR1Y2Vycy9lbnRpdHktY29sbGVjdGlvbic7XG5cbi8vIHNlbGVjdG9yc1xuZXhwb3J0ICogZnJvbSAnLi9zZWxlY3RvcnMvZW50aXR5LWNhY2hlLXNlbGVjdG9yJztcbmV4cG9ydCAqIGZyb20gJy4vc2VsZWN0b3JzL2VudGl0eS1zZWxlY3RvcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9zZWxlY3RvcnMvZW50aXR5LXNlbGVjdG9ycyQnO1xuXG4vLyBVdGlsc1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy9jb3JyZWxhdGlvbi1pZC1nZW5lcmF0b3InO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy9kZWZhdWx0LWxvZ2dlcic7XG5leHBvcnQgKiBmcm9tICcuL3V0aWxzL2RlZmF1bHQtcGx1cmFsaXplcic7XG5leHBvcnQgKiBmcm9tICcuL3V0aWxzL2d1aWQtZm5zJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvaW50ZXJmYWNlcyc7XG5leHBvcnQgKiBmcm9tICcuL3V0aWxzL3V0aWxpdGllcyc7XG5cbi8vIEVudGl0eURhdGFNb2R1bGVcbmV4cG9ydCB7IEVudGl0eURhdGFNb2R1bGUgfSBmcm9tICcuL2VudGl0eS1kYXRhLm1vZHVsZSc7XG5leHBvcnQge1xuICBFbnRpdHlEYXRhTW9kdWxlV2l0aG91dEVmZmVjdHMsXG4gIEVudGl0eURhdGFNb2R1bGVDb25maWcsXG59IGZyb20gJy4vZW50aXR5LWRhdGEtd2l0aG91dC1lZmZlY3RzLm1vZHVsZSc7XG4iXX0=