{"version":3,"file":"entity-data.module.js","sourceRoot":"ng://@ngrx/data/","sources":["src/entity-data.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { EffectsModule, EffectSources } from '@ngrx/effects';\n\nimport { DefaultDataServiceFactory } from './dataservices/default-data.service';\n\nimport {\n  DefaultPersistenceResultHandler,\n  PersistenceResultHandler,\n} from './dataservices/persistence-result-handler.service';\n\nimport {\n  DefaultHttpUrlGenerator,\n  HttpUrlGenerator,\n} from './dataservices/http-url-generator';\n\nimport { EntityCacheDataService } from './dataservices/entity-cache-data.service';\nimport { EntityCacheEffects } from './effects/entity-cache-effects';\nimport { EntityDataService } from './dataservices/entity-data.service';\nimport { EntityEffects } from './effects/entity-effects';\n\nimport { ENTITY_METADATA_TOKEN } from './entity-metadata/entity-metadata';\n\nimport {\n  ENTITY_CACHE_META_REDUCERS,\n  ENTITY_COLLECTION_META_REDUCERS,\n} from './reducers/constants';\nimport { Pluralizer, PLURAL_NAMES_TOKEN } from './utils/interfaces';\nimport { DefaultPluralizer } from './utils/default-pluralizer';\n\nimport {\n  EntityDataModuleConfig,\n  EntityDataModuleWithoutEffects,\n} from './entity-data-without-effects.module';\n\n/**\n * entity-data main module includes effects and HTTP data services\n * Configure with `forRoot`.\n * No `forFeature` yet.\n */\n@NgModule({\n  imports: [\n    EntityDataModuleWithoutEffects,\n    EffectsModule, // do not supply effects because can't replace later\n  ],\n  providers: [\n    DefaultDataServiceFactory,\n    EntityCacheDataService,\n    EntityDataService,\n    EntityCacheEffects,\n    EntityEffects,\n    { provide: HttpUrlGenerator, useClass: DefaultHttpUrlGenerator },\n    {\n      provide: PersistenceResultHandler,\n      useClass: DefaultPersistenceResultHandler,\n    },\n    { provide: Pluralizer, useClass: DefaultPluralizer },\n  ],\n})\nexport class EntityDataModule {\n  static forRoot(\n    config: EntityDataModuleConfig\n  ): ModuleWithProviders<EntityDataModule> {\n    return {\n      ngModule: EntityDataModule,\n      providers: [\n        // TODO: Moved these effects classes up to EntityDataModule itself\n        // Remove this comment if that was a mistake.\n        // EntityCacheEffects,\n        // EntityEffects,\n        {\n          provide: ENTITY_METADATA_TOKEN,\n          multi: true,\n          useValue: config.entityMetadata ? config.entityMetadata : [],\n        },\n        {\n          provide: ENTITY_CACHE_META_REDUCERS,\n          useValue: config.entityCacheMetaReducers\n            ? config.entityCacheMetaReducers\n            : [],\n        },\n        {\n          provide: ENTITY_COLLECTION_META_REDUCERS,\n          useValue: config.entityCollectionMetaReducers\n            ? config.entityCollectionMetaReducers\n            : [],\n        },\n        {\n          provide: PLURAL_NAMES_TOKEN,\n          multi: true,\n          useValue: config.pluralNames ? config.pluralNames : {},\n        },\n      ],\n    };\n  }\n\n  constructor(\n    private effectSources: EffectSources,\n    entityCacheEffects: EntityCacheEffects,\n    entityEffects: EntityEffects\n  ) {\n    // We can't use `forFeature()` because, if we did, the developer could not\n    // replace the entity-data `EntityEffects` with a custom alternative.\n    // Replacing that class is an extensibility point we need.\n    //\n    // The FEATURE_EFFECTS token is not exposed, so can't use that technique.\n    // Warning: this alternative approach relies on an undocumented API\n    // to add effect directly rather than through `forFeature()`.\n    // The danger is that EffectsModule.forFeature evolves and we no longer perform a crucial step.\n    this.addEffects(entityCacheEffects);\n    this.addEffects(entityEffects);\n  }\n\n  /**\n   * Add another class instance that contains effects.\n   * @param effectSourceInstance a class instance that implements effects.\n   * Warning: undocumented @ngrx/effects API\n   */\n  addEffects(effectSourceInstance: any) {\n    this.effectSources.addEffects(effectSourceInstance);\n  }\n}\n"]}