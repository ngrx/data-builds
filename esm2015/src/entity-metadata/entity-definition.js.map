{"version":3,"file":"entity-definition.js","sourceRoot":"ng://@ngrx/data/","sources":["src/entity-metadata/entity-definition.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAiB,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAIlE,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;;;;;AAIrD,sCASC;;;IARC,sCAAmB;;IACnB,yCAAgC;;IAChC,mDAAkE;;IAClE,wCAAkC;;IAClC,oCAA4B;;IAC5B,4CAA0B;;IAC1B,oCAAwB;;IACxB,wCAAkC;;;;;;;AAGpC,MAAM,UAAU,sBAAsB,CACpC,QAA8B;;QAE1B,UAAU,GAAG,QAAQ,CAAC,UAAU;IACpC,IAAI,CAAC,UAAU,EAAE;QACf,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAChD;IACD,QAAQ,CAAC,UAAU,GAAG,UAAU,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;;UAC/C,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,eAAe;;UAC/C,YAAY,GAAG,CAAC,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,IAAI,KAAK,CAAC;;UAEvE,aAAa,GAAG,mBAAmB,CAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;;UAElE,uBAAuB,GAC3B,QAAQ,CAAC,uBAAuB,IAAI,EAAE;;UAElC,YAAY,GAAwB,aAAa,CAAC,eAAe,iBACrE,UAAU,EACV,MAAM,EAAE,EAAE,EACV,MAAM,EAAE,KAAK,EACb,OAAO,EAAE,KAAK,EACd,WAAW,EAAE,EAAE,IACZ,CAAC,QAAQ,CAAC,yBAAyB,IAAI,EAAE,CAAC,EAC7C;;UAEI,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,KAAK,IAAI;IAE3D,OAAO;QACL,UAAU;QACV,aAAa;QACb,uBAAuB;QACvB,YAAY;QACZ,QAAQ;QACR,gBAAgB;QAChB,QAAQ;QACR,YAAY;KACb,CAAC;AACJ,CAAC","sourcesContent":["import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Comparer, IdSelector } from '@ngrx/entity';\n\nimport { EntityDispatcherDefaultOptions } from '../dispatchers/entity-dispatcher-default-options';\nimport { defaultSelectId } from '../utils/utilities';\nimport { EntityCollection } from '../reducers/entity-collection';\nimport { EntityMetadata } from './entity-metadata';\n\nexport interface EntityDefinition<T = any> {\n  entityName: string;\n  entityAdapter: EntityAdapter<T>;\n  entityDispatcherOptions?: Partial<EntityDispatcherDefaultOptions>;\n  initialState: EntityCollection<T>;\n  metadata: EntityMetadata<T>;\n  noChangeTracking: boolean;\n  selectId: IdSelector<T>;\n  sortComparer: false | Comparer<T>;\n}\n\nexport function createEntityDefinition<T, S extends object>(\n  metadata: EntityMetadata<T, S>\n): EntityDefinition<T> {\n  let entityName = metadata.entityName;\n  if (!entityName) {\n    throw new Error('Missing required entityName');\n  }\n  metadata.entityName = entityName = entityName.trim();\n  const selectId = metadata.selectId || defaultSelectId;\n  const sortComparer = (metadata.sortComparer = metadata.sortComparer || false);\n\n  const entityAdapter = createEntityAdapter<T>({ selectId, sortComparer });\n\n  const entityDispatcherOptions: Partial<EntityDispatcherDefaultOptions> =\n    metadata.entityDispatcherOptions || {};\n\n  const initialState: EntityCollection<T> = entityAdapter.getInitialState({\n    entityName,\n    filter: '',\n    loaded: false,\n    loading: false,\n    changeState: {},\n    ...(metadata.additionalCollectionState || {}),\n  });\n\n  const noChangeTracking = metadata.noChangeTracking === true; // false by default\n\n  return {\n    entityName,\n    entityAdapter,\n    entityDispatcherOptions,\n    initialState,\n    metadata,\n    noChangeTracking,\n    selectId,\n    sortComparer,\n  };\n}\n"]}